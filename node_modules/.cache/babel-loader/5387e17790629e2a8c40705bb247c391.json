{"ast":null,"code":"// import React, {useRef, useState,} from 'react'\n// import { Form, Button, Card, Alert } from 'react-bootstrap'\n// import \"./Register.css\"\n// import { useAuth } from '../../contexts/AuthContext' \n// export default function Register() {\n//     const nameRef = useRef()\n//     const emailRef = useRef()\n//     const passwordRef = useRef()\n//     const passwordConfirmRef = useRef()\n//     const {signup, currentUser} =useAuth()\n//     const [error, setError] = useState('')\n//     const [loading, setLoading] = useState(false)\n//  async function handleSubmit(e){\n//     e.preventDefault()\n//     if (passwordRef.current.value !== passwordConfirmRef.current.value){\n//       return setError('Wachtworden komen niet overeen!')\n//     }\n// try{\n//  setError('')\n//  setLoading(true)\n//  await signup(emailRef.current.value, passwordRef.current.value)\n//  }catch{\n//    setError('Registreren mislukt!')\n//  }\n//  setLoading(false)\n// }\n//   return (\n//     <div className='RegisterForm'>\n//       <Card>\n//          <Card.Body>\n//              <h2 className='ResgisterTitle'>Registreren</h2>\n//              <div className=\"RegisterInfoMessage\">* verplichte velden</div>\n//              {currentUser && currentUser.email}\n//              <div className='ErrorStyle'>{error}</div>\n//              <Form onSubmit={handleSubmit}>\n//                  <Form.Group id=\"naam\" className='formStyle'>\n//                      <Form.Label>Naam</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"text\" ref={nameRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"email\" className='formStyle'>\n//                      <Form.Label >E-mailadres</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"email\" ref={emailRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"wachtwoord\" className='formStyle'>\n//                      <Form.Label>Wachtwoord</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"password\" ref={passwordRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"wachtwoord-bevestigen\" className='formStyle'>\n//                      <Form.Label>Wachtwoord bevestigen</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"password\" ref={passwordConfirmRef} required/>\n//                  </Form.Group>\n//                   <Button disabled={loading} type=\"submit\">Registreren</Button>\n//              </Form>\n//         </Card.Body>\n//       </Card>\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/Users/demo/pvb_723/src/components/Register/Register.js"],"sourcesContent":["// import React, {useRef, useState,} from 'react'\n// import { Form, Button, Card, Alert } from 'react-bootstrap'\n// import \"./Register.css\"\n// import { useAuth } from '../../contexts/AuthContext' \n\n\n// export default function Register() {\n//     const nameRef = useRef()\n//     const emailRef = useRef()\n//     const passwordRef = useRef()\n//     const passwordConfirmRef = useRef()\n//     const {signup, currentUser} =useAuth()\n//     const [error, setError] = useState('')\n//     const [loading, setLoading] = useState(false)\n\n//  async function handleSubmit(e){\n//     e.preventDefault()\n//     if (passwordRef.current.value !== passwordConfirmRef.current.value){\n//       return setError('Wachtworden komen niet overeen!')\n//     }\n\n// try{\n//  setError('')\n//  setLoading(true)\n//  await signup(emailRef.current.value, passwordRef.current.value)\n//  }catch{\n//    setError('Registreren mislukt!')\n//  }\n//  setLoading(false)\n// }\n    \n//   return (\n//     <div className='RegisterForm'>\n//       <Card>\n//          <Card.Body>\n//              <h2 className='ResgisterTitle'>Registreren</h2>\n//              <div className=\"RegisterInfoMessage\">* verplichte velden</div>\n//              {currentUser && currentUser.email}\n//              <div className='ErrorStyle'>{error}</div>\n//              <Form onSubmit={handleSubmit}>\n//                  <Form.Group id=\"naam\" className='formStyle'>\n//                      <Form.Label>Naam</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"text\" ref={nameRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"email\" className='formStyle'>\n//                      <Form.Label >E-mailadres</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"email\" ref={emailRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"wachtwoord\" className='formStyle'>\n//                      <Form.Label>Wachtwoord</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"password\" ref={passwordRef} required/>\n//                  </Form.Group>\n//                  <Form.Group id=\"wachtwoord-bevestigen\" className='formStyle'>\n//                      <Form.Label>Wachtwoord bevestigen</Form.Label>\n//                      <Form.Control className='InputStyle' type=\"password\" ref={passwordConfirmRef} required/>\n//                  </Form.Group>\n//                   <Button disabled={loading} type=\"submit\">Registreren</Button>\n//              </Form>\n\n//         </Card.Body>\n//       </Card>\n      \n      \n\n//     </div>\n//   )\n// }\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA"},"metadata":{},"sourceType":"module"}